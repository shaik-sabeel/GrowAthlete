@import "tailwindcss";
/* src/index.css */
/* Minimal initial project-wide styles for html, body, and basic type setup */

:root {
  /* Using imports in App.css for var(--primary-color) etc. */
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif; /* Fallback for Roboto */
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: #242424; /* Adjusted from rgba(255, 255, 255, 0.87) for clarity against light background */
  background-color: #ffffff; /* Explicitly white for body background */

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Only body properties, removed root-level properties here because they are moved to :root{} in App.css for better organization */
body {
  margin: 0;
  /* display: flex; */ /* Removed from body to allow for full-width content layouts */
  /* place-items: center; */ /* Removed from body */
  min-width: 320px;
  min-height: 100vh;
  
  /* background-color and color also removed to be controlled by :root and component styles */
}

/* These h1 and button styles were from Vite template and are conflicting,
   they should be managed by App.css global headings or individual components
   Let's keep them here as bare minimum overrides */
h1 {
  font-size: 3.2em; /* Keep for general h1, specific ones overridden by App.css headings */
  line-height: 1.1;
  color: #333; /* Default dark text color */
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  color: #ffffff; /* Default button text color */
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

/* This is the logo spin animation, from Vite template. Not used if using custom Navbar logo */
@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* If using custom Navbar logo, delete the animation rules */

/* Other specific vite template remnants that can be removed if not used */
/* .logo { ... }
.logo:hover { ... }
.logo.react:hover { ... }
@media (prefers-reduced-motion: no-preference) { ... }
.card { ... }
.read-the-docs { ... } */

/* src/index.css (or wherever you define your global styles) */

/*
Add this block to your CSS.
It defines keyframes for a text flicker animation and applies it
with varying opacities and subtle transforms for a glitch effect.
*/

@keyframes text-flicker {
  0%, 10%, 12%, 18%, 20%, 30%, 32%, 38%, 40%, 42%, 48%, 50%, 52%, 58%, 60%, 62%, 68%, 70%, 72%, 78%, 80%, 82%, 88%, 90%, 92%, 98%, 100% {
    opacity: 1;
    transform: none;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.4), 0 0 10px rgba(255, 255, 255, 0.3);
  }

  5%, 15%, 25%, 35%, 45%, 55%, 65%, 75%, 85%, 95% {
    opacity: 0.8; /* Slight dim */
    transform: translateY(1px) translateX(-0.5px); /* Minor jitter */
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.6);
  }

  11%, 31%, 51%, 71%, 91% {
    opacity: 0; /* Complete momentary disappearance */
    transform: translateY(2px) translateX(1px) scale(0.99); /* More pronounced jitter */
    text-shadow: none;
  }
  21%, 41%, 61%, 81% {
    opacity: 0.2; /* Short partial fade out */
    transform: translateY(-1px) translateX(0.5px);
  }
}

.animate-text-flicker {
  animation: text-flicker 4s infinite alternate ease-in-out; /* Longer, smoother base */
  will-change: opacity, transform, text-shadow; /* Optimize browser rendering */
}



/* src/index.css (or wherever you define your global styles) */

/* Existing flicker keyframes (ensure these are present from previous step) */
@keyframes text-flicker {
  0%, 10%, 12%, 18%, 20%, 30%, 32%, 38%, 40%, 42%, 48%, 50%, 52%, 58%, 60%, 62%, 68%, 70%, 72%, 78%, 80%, 82%, 88%, 90%, 92%, 98%, 100% {
    opacity: 1;
    transform: none;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.4), 0 0 10px rgba(255, 255, 255, 0.3);
  }

  5%, 15%, 25%, 35%, 45%, 55%, 65%, 75%, 85%, 95% {
    opacity: 0.8;
    transform: translateY(1px) translateX(-0.5px);
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.6);
  }

  11%, 31%, 51%, 71%, 91% {
    opacity: 0;
    transform: translateY(2px) translateX(1px) scale(0.99);
    text-shadow: none;
  }
  21%, 41%, 61%, 81% {
    opacity: 0.2;
    transform: translateY(-1px) translateX(0.5px);
  }
}

.animate-text-flicker {
  animation: text-flicker 4s infinite alternate ease-in-out;
  will-change: opacity, transform, text-shadow;
}


/* New keyframes for the @effectualdesign fade-in */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 0.8; } /* Matching the text's default opacity */
}

.animate-fade-in {
  opacity: 0; /* Start invisible */
  animation: fadeIn 1s forwards ease-out; /* forwards keeps it visible after animation */
}